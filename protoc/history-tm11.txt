    1  sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y
    2  sudo apt-get install openssh-*
    3  sudo vim /etc/hostname 
    4  sudo apt-get install vim
    5  sudo vim /etc/hostname 
    6  ssh tm01.local
    7  sudo reboot now
    8  exit
    9  ls -la
   10  df -h
   11  ssh tm01
   12  sudo raspi-config 
   13  ssh tm01
   14  ssh-copy-id tm01.local
   15  ls ~/.ssh/
   16  ssh tm01
   17  ssh-copy-id tm01.local
   18  exit
   19  ssh tm01.local
   20  ssh tm02.local
   21  ssh-copy-id tm02.local tm03.local
   22  ssh-copy-id tm02.local
   23  ssh-copy-id tm03.local
   24  ssh-copy-id tm04.local
   25  ssh-copy-id tm05.local
   26  ssh-copy-id tm06.local
   27  ssh-copy-id tm07.local
   28  ssh-copy-id tm08.local
   29  ssh-copy-id tm09.local
   30  ssh-copy-id tm10.local
   31  ssh tm10.local
   32  ssh tm04.local
   33  ls
   34  exit
   35  ifconfig
   36  ls -la
   37  cd spidr/
   38  ls -la
   39  ls -la | grep ->
   40  ls -la | grep "->"
   41  ls -la | grep -E "->"
   42  ls -la | grep -E "[-][>]"
   43  ls -la
   44  exit
   45  ifconfig
   46  exit
   47  ifconfig
   48  ls -lahtr
   49  sudo ls /root/
   50  cd /opt/
   51  ls
   52  ls -lahtr
   53  cd WidevineCdm/
   54  ls -la
   55  vi manifest.json 
   56  q
   57  cd ..
   58  ls -la
   59  cd watr/
   60  ls -la
   61  cd scapy/
   62  cd ..
   63  cd build/
   64  ls-la
   65  l s-al
   66  l s-la
   67  ls -la
   68  cd ..
   69  ls -la
   70  ls -la build
   71  ls -la tests/
   72  python tests/test_basic.py 
   73  ls -la
   74  venv/bin/activate
   75  venv/bin/python
   76  ls-la
   77  ls -al
   78  ls src/
   79  vim deploy_to_rpi.sh 
   80  source venv/bin/activate
   81  ls -la
   82  python tests/test_basic.py 
   83  python tests/test_protocol
   84  python tests/test_protocol.py 
   85  lsof
   86  ifkill
   87  rfkill
   88  lsusb
   89  ifconfig
   90  ls -la
   91  cd venv/
   92  cd bin/
   93  l s-la
   94  ls -al
   95  cd ..
   96  ls -la
   97  cd ..
   98  l s-la
   99  ls -al
  100  ./test-packets 
  101  exit
  102  cd /opt/
  103  cd watr/
  104  clear
  105  sudo ./venv/bin/python ./test-receive.py
  106  ifconfig
  107  suo rfkill
  108  sudo rfkill
  109  ls
  110  sudo ./bootstrap
  111  sudo ./venv/bin/python ./bootstrap.py 
  112  ifconfig
  113  sudo ./venv/bin/python ./bootstrap.py --help
  114  ifconfig
  115  cd atr
  116  cd watr
  117  cd /opt/watr/
  118  venv/bin/python ./test-send.py 
  119  sudo venv/bin/python ./test-send.py 
  120  sudo tcpdump -vvv -n -i wlan1 -e
  121  sudo apt-get install tcpdump 
  122  sudo tcpdump -vvv -n -i wlan1 -e
  123  ifconfig
  124  ifconfig | more
  125  sudo rfkill
  126  cd protoc/
  127  ls-la
  128  ls -al
  129  sudo venv/bin/python ./test-send.py 
  130  ls -la
  131  vim custom.py 
  132  ifconfig
  133  vim custom.py 
  134  cd watr/
  135  git pull && make clean && make
  136  exit
  137  cd watr
  138  cd protoc/
  139  git pull && make clean && make
  140  sudo ./receive-test mon0
  141  exit
  142  clear
  143  ifconfig
  144  sudo rfkill
  145  cd lib
  146  cd /opt
  147  cd watr/
  148  cd protoc/
  149  lsusb
  150  clear
  151  ls -la
  152  vim networking.sh 
  153  ls -la
  154  vim hush.sh 
  155  ls -la
  156  vim build-wifi-monitor-setup.sh 
  157  ./build-wifi-monitor-check.sh 
  158  ./build-wifi-monitor-setup.sh 
  159  ls -la
  160  ./wifi-monitor-check 
  161  ./wifi-monitor-setup 
  162  sudo ./wifi-monitor-setup phy1
  163  ifconfig
  164  cd ..
  165  ls
  166  cd ~
  167  ls -la
  168  mkdir projects
  169  git clone ./build_protoc.sh --install-deps
  170  git clone git@github.com:tinymachines/watr.git
  171  cd watr/
  172  ls -la
  173  ./build_protoc.sh --install-deps
  174  git pull
  175  cd protoc/
  176  ls
  177  make
  178  make all
  179  sudo ./receive-test 
  180  sudo ./receive-test mon0
  181  la
  182  ls
  183  vim custom.py 
  184  git pull
  185  make
  186  make clean
  187  make
  188  ,
  189  ./send-test 
  190  ./send-test mon0
  191  sudo ./send-test mon0
  192  sudo ./receive-test mon0
  193  git pull && make clean && makei
  194  sudo ./send-test mon0
  195  exit
  196  cd watr/
  197  cd protoc/
  198  git pull &&./build_protoc.sh
  199  cd ..
  200  git pull &&./build_protoc.sh
  201  cd protoc
  202  ./build.sh 
  203  ps aux | grep rec
  204  ps aux | grep send
  205  ps aux | grep sen
  206  ps aux | grep test
  207  clar
  208  clear
  209  sudo ./receive-test mon0 5
  210  sudo ./send-test mon0
  211  ps aux | grep test
  212  ps aux | grep rece'
  213  ps aux | grep rece
  214  ps aux | grep send
  215  sudo ./send-test mon0
  216  git pull
  217  sudo ./receive-test mon0 5
  218  sudo ./send-test mon0
  219  history | grep tcpdump
  220  sudo tcpdump -vvv -n -i mon0 -e
  221  ifconfig
  222  sudo tcpdump -vvv -n -i wlan1 -e
  223  sudo ./send-test mon0
  224  lsusb
  225  sugo reboot now
  226  sudo reboot now
  227  lsuisb
  228  lsusb
  229  cd watr/
  230  cd protoc/
  231  ./wifi-monitor-check 
  232  sudo ./wifi-monitor-setup phy1
  233  sudo ./wifi-monitor-setup phy0
  234  sudo ./wifi-monitor-setup phy1
  235  ifconfig
  236  sudo ./wifi-monitor-setup phy1
  237  ifconfig
  238  sudo ifconfig down mon09
  239  sudo ifconfig mon0 down
  240  sudo ./wifi-monitor-check 
  241  sudo ./wifi-monitor-setup phy1
  242  ifconfig
  243  sudo ifconfig mon0 sss
  244  sudo ifconfig mon0 delete
  245  sudo ifconfig --help\p
  246  sudo ifconfig --help
  247  ifconfig | more
  248  ifconfig --help more
  249  sudo ifconfig mon0 up
  250  sudo rfkill
  251  sudo rfkill unblock
  252  sudo rfkill
  253  cat  /etc/modprobe.d/blacklist.conf
  254  cat  /etc/modprobe.d/*
  255  sudo rfkill unblock all
  256  sudo rfkill
  257  ./wifi-monitor-check 
  258  sudo ./wifi-monitor-setup phy1
  259  ifconfig
  260  sudo ./dumpit.sh 
  261  exit
  262  cd watr/
  263  cd protoc/
  264  ./dump
  265  ./dumpit.sh 
  266  ./receive-test 
  267  ./receive-test mon0
  268  sudo ./receive-test mon0
  269  ./receive-test mon0
  270  ./dumpit.sh 
  271  tcpdump --help
  272  cat dumpit.sh 
  273  sudo tcpdump -vvv -n -i mon0
  274  sudo tcpdump -vvv -n -i mon0 | grep -v "Elise"
  275  sudo tcpdump -vvv -n -i mon0 | grep -vE "Elise|salami"
  276  sudo tcpdump -vvv -n -i mon0 -s0 -X -c 1000 | grep -vE "Elise|salami"
  277  exit
  278  ls
  279  cd watr
  280  la
  281  ls
  282  history
  283  vim dumpit.sh
  284  cs protoc/
  285  cd protoc/
  286  ls
  287  cim dumpit.sh 
  288  vim dumpit.sh 
  289  sudo ./dumpit.sh 
  290  exit
  291  cd watt
  292  cd watr
  293  cd protoc
  294  ls
  295  sudo ./send-test mon0
  296  ls
  297  ifconfig
  298  ls
  299  la
  300  ls
  301  vim watr_protocol.cpp
  302  exit
  303  clear
  304  ifconfig
  305  sudo vim /etc/NetworkManager/NetworkManager.conf
  306  sudo systemctl restart NetworkManager
  307  cd rojects
  308  cd projects/
  309  git clone 
  310  git clone https://github.com/aircrack-ng/aircrack-ng.git
  311  cd aircrack-ng/
  312  ./autogen.sh 
  313  sudo apt-getr install libtoolize
  314  sudo apt-get install libtoolize
  315  sudo apt-get install libtool
  316  ./autogen.sh 
  317  ./config
  318  ./configure 
  319  sudo apt-get install openssl
  320  sudo apt-get install libopenssl
  321  sudo apt-get install libgnutls-openssl27 
  322  ./auto
  323  ./autogen.sh 
  324  sudo ldcondig
  325  sudo ldconfig 
  326  ./autogen.sh 
  327  sudo apt-get install libssl-dev
  328  ./autogen.sh 
  329  ./configure
  330  make && sudo make install
  331  sudo airmon-ng check kill
  332  ifconfig
  333  sudo rfkill
  334  sudo rfkill unblock all
  335  sudo rfkill
  336  mv ~/projects/aircrack-ng .
  337  cd ~/watr/protoc/
  338  mv ~/projects/aircrack-ng .
  339  l s-la
  340  vim .gitignore 
  341  git status
  342  ls- la
  343  ls -la
  344  ./wifi-monitor-
  345  ./wifi-monitor-check 
  346  vim dumpit.sh 
  347  ls
  348  ifconfig
  349  ./wifi-monitor-check 
  350  sudo ./wifi-monitor-setup 
  351  sudo ./wifi-monitor-setup  phy1
  352  ifconfig
  353  ./dumpit.sh 
  354  git pull
  355  git stash
  356  git pull
  357  ./receive-test 
  358  ls -la
  359  git pull
  360  ./reset.sh 
  361  sudo ldconfiug
  362  sudo ldconfig
  363  sudo ldconfiug
  364  ./reset.sh 
  365  lsusb
  366  ls -la
  367  sudo ./send-test mon0
  368  sudo apt-get update && sudo apt-get upgrade -y && sudo reboot now
  369  ifconfig
  370  cd watr/protoc/
  371  git pull
  372  ./reset.sh 
  373  vim re
  374  sudo vim reset.sh 
  375  ifconfig
  376  sudo raspi-config nonint do_wifi_country US
  377  sudo rfkill
  378  sudo vim reset.sh 
  379  ./rea
  380  ./reset.sh 
  381  sudo ./receive-test mon0
  382  ./dumpit.sh 
  383  vim reset.sh 
  384  git stash
  385  curl -fsSL https://pyenv.run | bash
  386  vim ~/.bashrc 
  387  exit
  388  sudo vim /etc/hostname 
  389  sudo vim ~/.bashrc 
  390  vim ~/.profile 
  391  exit
  392  vim ~/.profile 
  393  vim ~/.bash
  394  vim ~/.bashrc 
  395  exit
  396  function init() {         export NVM_DIR="$HOME/.nvm";         [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  397          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  398           export PATH=${HOME}/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/usr/local/go/bin:${NVM_DIR};          nvm install 22;          export PYENV_ROOT="$HOME/.pyenv";         command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH";          eval "$(pyenv init -)";         eval $(ssh-agent -s);         ssh-add ~/.ssh/id_ed25519_knowsynet;         ssh-add ~/.ssh/id_ed25519_github; }
  399  sudo apt update; sudo apt install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl git \
  400  sudo apt update; sudo apt install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl git \
  401  sudo apt update; sudo apt install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl git libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
  402  pyenv install 3.12.
  403  pyenv install 3.12.7
  404  pyenv 3.12.7 tinmac
  405  pyenv virtualend 3.12.7 tinmac
  406  pyenv virtualenv 3.12.7 tinmac
  407  pyenv activate tinmac
  408  cd watr/protoc/
  409  git pull
  410  git clone https://github.com/secdev/scapy.git
  411  python -m pip install -r requirements.txt 
  412  pip install --upgrade pip
  413  vim requirements.txt 
  414  pip install --upgrade pip
  415  python -m pip install -r requirements.txt 
  416  cd scapy
  417  ls -la
  418  python -m pip install -e .
  419  cd ..
  420  git pull
  421  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py send
  422  cat dumpit.sh 
  423  sudo tcpdump -vvv -n -i mon0
  424  tcpdump --help | more
  425  sudo tcpdump -i mon0
  426  sudo tcpdump -i mon0 -A
  427  ./dumpit.sh 
  428  vim dumpit.sh 
  429  ./dumpit.sh 
  430  cat dumpit.sh 
  431  sudo tcpdump -vvv -n -i mon0
  432  sudo tcpdump -vvv -n -i mon0 -s0
  433  sudo tcpdump -i mon0 -X
  434  sudo tcpdump -i mon0 -X | grep 3DU
  435  ls *.sh
  436  vim hush.sh 
  437  sudo tcpdump -i mon0 -X | grep "00:11:22"
  438  sudo tcpdump -i mon0 -X -vv | grep "00:11:22"
  439  sudo tcpdump -i mon0 -X -vv
  440  sudo tcpdump -i mon0 -X -vv | tee run.log
  441  vim run.log 
  442  sudo tcpdump -i mon0 -X -vv | tee run.log
  443  vim run.log 
  444  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive
  445  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  446  vim run.log 
  447  vim custom.py 
  448  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  449  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py send
  450  ifconfig
  451  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  452  tcplog
  453  ifconfiug
  454  ifconfig
  455  ./dumpit.sh 
  456  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  457  sudo ifconfig wlan1 down
  458  sudo iwconfig wlan1 mode monitor
  459  sudo ifconfig wlan1 up
  460  sudo iwconfig wlan1 chan 6
  461  sudo iwconfig wlan1
  462  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  463  vim custom.py 
  464  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  465  vim custom.py 
  466  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  467  vim custom.py 
  468  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  469  vim custom.py 
  470  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | tee run.log
  471  sudo -E PYTHONPATH=".:./scapy" $(which python) ./custom.py receive | jq
  472  ./dumpit.sh 
  473  git status
  474  cat custom.py 
  475  git iff custom.py
  476  git diff custom.py
  477  sudo reboot now
  478  suo rfkill
  479  sudo rfkill
  480  cd watr/
  481  cat .git/config
  482  git pull
  483  git stash
  484  git pull
  485  cd protoc/
  486  cat history.txt 
  487  history >./history-tm11.txt
